package com.hello.suripu.core.processors.insights;

import com.google.common.collect.ImmutableMap;

import java.util.HashMap;
import java.util.Map;

/**
 * Created by jingyun on 7/25/15.
 */
public class WakeStdDevData {
    private static String DISTRIBUTION_DATA = "0,0.00212828625877\n"+
                "1,0.00433918591846\n"+
                "2,0.00663476845656\n"+
                "3,0.00901709714194\n"+
                "4,0.0114882256758\n"+
                "5,0.0140501947249\n"+
                "6,0.0167050283519\n"+
                "7,0.0194547303481\n"+
                "8,0.0223012804739\n"+
                "9,0.0252466306136\n"+
                "10,0.028292700851\n"+
                "11,0.0314413754726\n"+
                "12,0.0346944989063\n"+
                "13,0.0380538716043\n"+
                "14,0.0415212458768\n"+
                "15,0.0450983216871\n"+
                "16,0.0487867424174\n"+
                "17,0.0525880906136\n"+
                "18,0.0565038837205\n"+
                "19,0.0605355698172\n"+
                "20,0.0646845233637\n"+
                "21,0.0689520409696\n"+
                "22,0.0733393371958\n"+
                "23,0.0778475404014\n"+
                "24,0.0824776886472\n"+
                "25,0.0872307256675\n"+
                "26,0.0921074969223\n"+
                "27,0.0971087457416\n"+
                "28,0.102235109575\n"+
                "29,0.107487116357\n"+
                "30,0.112865181003\n"+
                "31,0.118369602042\n"+
                "32,0.124000558406\n"+
                "33,0.129758106382\n"+
                "34,0.135642176739\n"+
                "35,0.14165257204\n"+
                "36,0.14778896416\n"+
                "37,0.154050891999\n"+
                "38,0.160437759427\n"+
                "39,0.166948833444\n"+
                "40,0.17358324259\n"+
                "41,0.180339975591\n"+
                "42,0.187217880261\n"+
                "43,0.194215662672\n"+
                "44,0.201331886582\n"+
                "45,0.208564973145\n"+
                "46,0.215913200898\n"+
                "47,0.223374706034\n"+
                "48,0.230947482961\n"+
                "49,0.238629385155\n"+
                "50,0.246418126306\n"+
                "51,0.254311281757\n"+
                "52,0.262306290245\n"+
                "53,0.270400455933\n"+
                "54,0.278590950735\n"+
                "55,0.286874816937\n"+
                "56,0.295248970109\n"+
                "57,0.303710202296\n"+
                "58,0.312255185495\n"+
                "59,0.320880475405\n"+
                "60,0.329582515448\n"+
                "61,0.338357641048\n"+
                "62,0.347202084165\n"+
                "63,0.356111978073\n"+
                "64,0.365083362368\n"+
                "65,0.374112188206\n"+
                "66,0.383194323748\n"+
                "67,0.392325559807\n"+
                "68,0.401501615678\n"+
                "69,0.410718145148\n"+
                "70,0.419970742662\n"+
                "71,0.429254949632\n"+
                "72,0.438566260879\n"+
                "73,0.447900131191\n"+
                "74,0.457251981972\n"+
                "75,0.466617207983\n"+
                "76,0.475991184142\n"+
                "77,0.485369272376\n"+
                "78,0.494746828503\n"+
                "79,0.504119209132\n"+
                "80,0.513481778559\n"+
                "81,0.522829915646\n"+
                "82,0.532159020658\n"+
                "83,0.541464522057\n"+
                "84,0.550741883217\n"+
                "85,0.559986609059\n"+
                "86,0.569194252583\n"+
                "87,0.578360421275\n"+
                "88,0.587480783392\n"+
                "89,0.596551074092\n"+
                "90,0.605567101399\n"+
                "91,0.614524751999\n"+
                "92,0.623419996835\n"+
                "93,0.632248896514\n"+
                "94,0.641007606483\n"+
                "95,0.649692381996\n"+
                "96,0.658299582827\n"+
                "97,0.666825677754\n"+
                "98,0.675267248777\n"+
                "99,0.683620995075\n"+
                "100,0.691883736698\n"+
                "101,0.700052417974\n"+
                "102,0.708124110644\n"+
                "103,0.7160960167\n"+
                "104,0.723965470943\n"+
                "105,0.731729943237\n"+
                "106,0.739387040482\n"+
                "107,0.746934508277\n"+
                "108,0.754370232297\n"+
                "109,0.761692239368\n"+
                "110,0.768898698258\n"+
                "111,0.775987920165\n"+
                "112,0.782958358926\n"+
                "113,0.789808610943\n"+
                "114,0.79653741482\n"+
                "115,0.80314365074\n"+
                "116,0.809626339568\n"+
                "117,0.815984641694\n"+
                "118,0.822217855628\n"+
                "119,0.828325416345\n"+
                "120,0.834306893403\n"+
                "121,0.840161988826\n"+
                "122,0.84589053478\n"+
                "123,0.851492491035\n"+
                "124,0.856967942237\n"+
                "125,0.862317094994\n"+
                "126,0.86754027479\n"+
                "127,0.872637922738\n"+
                "128,0.877610592176\n"+
                "129,0.882458945138\n"+
                "130,0.88718374869\n"+
                "131,0.891785871149\n"+
                "132,0.896266278215\n"+
                "133,0.900626028993\n"+
                "134,0.904866271958\n"+
                "135,0.908988240837\n"+
                "136,0.912993250448\n"+
                "137,0.916882692492\n"+
                "138,0.920658031318\n"+
                "139,0.924320799662\n"+
                "140,0.927872594385\n"+
                "141,0.931315072207\n"+
                "142,0.934649945459\n"+
                "143,0.93787897785\n"+
                "144,0.941003980275\n"+
                "145,0.944026806654\n"+
                "146,0.946949349833\n"+
                "147,0.949773537531\n"+
                "148,0.952501328364\n"+
                "149,0.955134707933\n"+
                "150,0.957675685004\n"+
                "151,0.960126287764\n"+
                "152,0.962488560177\n"+
                "153,0.964764558439\n"+
                "154,0.966956347534\n"+
                "155,0.969065997901\n"+
                "156,0.971095582211\n"+
                "157,0.973047172266\n"+
                "158,0.974922836009\n"+
                "159,0.976724634664\n"+
                "160,0.978454619999\n"+
                "161,0.980114831707\n"+
                "162,0.981707294929\n"+
                "163,0.983234017891\n"+
                "164,0.984696989681\n"+
                "165,0.986098178149\n"+
                "166,0.987439527935\n"+
                "167,0.988722958632\n"+
                "168,0.989950363067\n"+
                "169,0.991123605717";

    private static final double MAX_WAKE_STDDEV = 169;
    private static final int MAX_WAKE_STDDEV_PERCENTILE = 99;


    private ImmutableMap<Double, Integer> distributionLookup;


    public  WakeStdDevData() {
        final Map<Double, Integer> temp = new HashMap<>();
        final String[] rows = DISTRIBUTION_DATA.split("\n");
        for(final String row : rows) {
            final String[] rowParts = row.split(",");
            final double wakeStdDev = Float.parseFloat(rowParts[0]);
            final int percentile =  (int) Float.parseFloat(rowParts[1]);
            temp.put(wakeStdDev, percentile);
        }
        this.distributionLookup = ImmutableMap.copyOf(temp);
    }


        public int getWakeStdDevPercentile(final double wakeStdDevValue) {
        if (wakeStdDevValue > MAX_WAKE_STDDEV) {
            return MAX_WAKE_STDDEV_PERCENTILE;
        }
        return this.distributionLookup.get(wakeStdDevValue);
    }

}
