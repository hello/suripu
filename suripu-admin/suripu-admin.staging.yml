debug: true

sensors_db:
  driverClass: org.postgresql.Driver
  user: ingress_user
  password: hello ingress user
  url: jdbc:postgresql://chanku-test.cdawj8qazvva.us-east-1.rds.amazonaws.com:5432/chanku
  properties:
    hibernate.dialect: org.hibernate.spatial.dialect.postgis.PostgisDialect
  # any properties specific to your JDBC driver:
  properties:
    charSet: UTF-8

  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyService Health Check */ SELECT 1"

  # the minimum number of connections to keep open
  minSize: 2

  # the maximum number of connections to keep open
  maxSize: 8

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

  # how long a connection must be held before it can be validated
  checkConnectionHealthWhenIdleFor: 10s

  # the maximum lifetime of an idle connection
  closeConnectionIfIdleFor: 1 minute

common_db:
  driverClass: org.postgresql.Driver
  user: ingress_user
  password: hello ingress user
  url: jdbc:postgresql://chanku-test.cdawj8qazvva.us-east-1.rds.amazonaws.com:5432/chanku
  properties:
    hibernate.dialect: org.hibernate.spatial.dialect.postgis.PostgisDialect

  # any properties specific to your JDBC driver:
  properties:
    charSet: UTF-8

  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyService Health Check */ SELECT 1"

  # the minimum number of connections to keep open
  minSize: 2

  # the maximum number of connections to keep open
  maxSize: 8

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

  # how long a connection must be held before it can be validated
  checkConnectionHealthWhenIdleFor: 10s

  # the maximum lifetime of an idle connection
  closeConnectionIfIdleFor: 1 minute

http:
  port: 3333
  adminPort: 3336

logging:
  level: INFO
  loggers:
    com.hello.suripu: DEBUG

kinesis:
  endpoint : https://kinesis.us-east-1.amazonaws.com
  streams :
    audio_features : audio_features
    activity_stream : activity_stream
    registrations: registrations
    encode_audio : encode_audio
    batch_pill_data : batch_pill_data
    sense_sensors_data : sense_sensors_data

kinesis_logger:
  stream_name: logs
  enabled : false
  buffer_size: 100
  origin: suripu-admin

redis:
  host: localhost
  port: 6379

dynamodb:
  region: us-east-1
  tables:
    features : features
    alarm_info : alarm_info
    sense_key_store : key_store
    pill_key_store : pill_key_store
    password_reset : password_reset
    sense_events : sense_events
    teams : teams
    firmware_versions : firmware_versions_mapping
    sync_response_commands : response_commands
    ota_history : ota_history
    firmware_upgrade_path: fw_upgrade_path
    sense_prefix : sense
    sense_last_seen : sense_last_seen
    alarm: alarm

  endpoints:
      features : http://dynamodb.us-east-1.amazonaws.com
      alarm_info : http://dynamodb.us-east-1.amazonaws.com
      sense_key_store : http://dynamodb.us-east-1.amazonaws.com
      pill_key_store : http://dynamodb.us-east-1.amazonaws.com
      password_reset : http://dynamodb.us-east-1.amazonaws.com
      sense_events : http://dynamodb.us-east-1.amazonaws.com
      teams : http://dynamodb.us-east-1.amazonaws.com
      firmware_versions : http://dynamodb.us-east-1.amazonaws.com
      sync_response_commands : http://dynamodb.us-east-1.amazonaws.com
      ota_history : http://dynamodb.us-east-1.amazonaws.com
      firmware_upgrade_path : http://dynamodb.us-east-1.amazonaws.com
      sense_prefix : http://dynamodb.us-east-1.amazonaws.com
      sense_last_seen : http://dynamodb.us-east-1.amazonaws.com
      alarm: http://localhost:7777